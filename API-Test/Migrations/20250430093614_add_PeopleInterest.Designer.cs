// <auto-generated />
using API_Test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Test.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250430093614_add_PeopleInterest")]
    partial class add_PeopleInterest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Test.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Allt om kodning",
                            Name = "Programmering"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Allt om spel",
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Allt om matlagning",
                            Name = "Matlagning"
                        });
                });

            modelBuilder.Entity("API_Test.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LinkName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PeopleInterestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeopleInterestId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("API_Test.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "0731234567"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "0732345678"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Phone = "0733456789"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Bob",
                            LastName = "Brown",
                            Phone = "0734567890"
                        });
                });

            modelBuilder.Entity("API_Test.Models.PeopleInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("PeopleId");

                    b.ToTable("PeopleInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterestId = 2,
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 2,
                            InterestId = 1,
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 3,
                            InterestId = 3,
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 4,
                            InterestId = 2,
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 5,
                            InterestId = 3,
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 6,
                            InterestId = 1,
                            PeopleId = 4
                        },
                        new
                        {
                            Id = 7,
                            InterestId = 2,
                            PeopleId = 4
                        },
                        new
                        {
                            Id = 8,
                            InterestId = 3,
                            PeopleId = 4
                        });
                });

            modelBuilder.Entity("API_Test.Models.Link", b =>
                {
                    b.HasOne("API_Test.Models.PeopleInterest", "PeopleInterest")
                        .WithMany("Links")
                        .HasForeignKey("PeopleInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeopleInterest");
                });

            modelBuilder.Entity("API_Test.Models.PeopleInterest", b =>
                {
                    b.HasOne("API_Test.Models.Interest", "Interest")
                        .WithMany("PeopleInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Test.Models.People", "People")
                        .WithMany("PeopleInterests")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("People");
                });

            modelBuilder.Entity("API_Test.Models.Interest", b =>
                {
                    b.Navigation("PeopleInterests");
                });

            modelBuilder.Entity("API_Test.Models.People", b =>
                {
                    b.Navigation("PeopleInterests");
                });

            modelBuilder.Entity("API_Test.Models.PeopleInterest", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
